---
title: "Taxonomy Workbook"
subtitle: "Week 1"
author: "Kyle Nessen"
date: "2024-01-15"
toc: true
categories: []
format: 
   html:
     df-print: kable
execute:
  echo: false
  freeze: true
  eval: false
  include: false
---

## Load data

```{r}
#| warning: false
library(tidyverse)
library(RMySQL)
con <- dbConnect(RMySQL::MySQL(), dbname = "selectree", host = "localhost", 
                 port = 3306, user = "rstudio", password = "rstudio321")
```

```{r}
df <- dbReadTable(con, "taxon")
df <- df %>% filter(species != "") %>% # filter out the problematic species we are dealing with separately
      filter(sequence == 1) %>% # only search SelecTree accepted names
      filter(cultivar == "") # GBIF doesn't handle cultivars, so remove from query
```

```{r}
df[df$tree_id == 1739, ]

```

## Run gbif taxonomy

Here I'm messing with GBIF and seeing if I can run the list through their service

```{r}
names <- df %>%
  select(name_unformatted) %>%
  pull(name_unformatted)

# Now apply name_backbone to each verbatim_name
gbif <- map_df(names, ~name_backbone(., strict = TRUE))
```

## Synonyms

```{r}
syns <- gbif %>% 
  filter(status == "SYNONYM" & matchType == "EXACT") %>%
  select(verbatim_name, usageKey, acceptedUsageKey) %>%
  rowwise() %>%
  mutate(acceptedCanonicalName = {
    result <- name_usage(key = acceptedUsageKey)
    # Assuming result is a list where the first element is the dataframe of interest
    df <- result$data
    if (is.data.frame(df) && "canonicalName" %in% names(df)) {
      df$canonicalName
    } else {
      NA  # Return NA if the structure is not as expected
    }
  })%>%
  mutate(selecTree_name_url = paste0("https://www.gbif.org/species/", usageKey)) %>%
  mutate(accepted_name_url = paste0("https://www.gbif.org/species/", acceptedUsageKey))
  
```

```{r}

```

## Scratch

```{r}
# Filter all rows in gbif that DO NOT have matchType == "EXACT" and status == "ACCEPTED"
problem_spp <- gbif %>% filter(matchType != "EXACT" | status != "ACCEPTED")
no_problem_spp <- gbif %>% filter(matchType == "EXACT" & status == "ACCEPTED")
```

```{r}
# check to see if problem_spp and no_problem_spp have the same number of rows as gbif
nrow(problem_spp) + nrow(no_problem_spp) == nrow(gbif)
```

```{r}
fuzzy <- problem_spp %>% filter(matchType == "FUZZY")

# check to see if fuzzy$canonicalName is the same as fuzzy$verbatim_name
fuzzy$canonicalName == fuzzy$verbatim_name
```

```{r}
no_syns <- problem_spp %>% filter(status != "SYNONYM" | is.na(status))
```

```{r}
syns <- gbif %>% filter(status == "SYNONYM" & matchType == "EXACT")
```
